( ========= < F4 : complex numbers ranum extension > ========= )         auf 'ranum'-ergaenzung aus <f4f.scr> aufbauend                  F4 0-2-0+14 oder juengere version erforderlich                                                                                    Copyright 2004 h-peter recktenwald Berlin                       email : f4z -a- lxhp -:- in-berlin -:- de                                                                               experimentelle erweiterung der 'reellen zahlen' des F4 auf      complexe zahlen und entsprechende rechenverfahren ohne jede     zusage oder gewaehrleistung; patentrechtliche verwertung        behaelt sich der autor ohne einschraenkung selbst vor,          <f4z.scr> ist ansonsten frei zu beliebiger verwendung.          geprueft durch vergleich mit quelle [0] in gforth 0.5.0.                                                                                           Su 2004-01-17 17:18                                             Su 2004-01-31 21:21                       --> ======= < F4 : complex numbers ranum extension > ======= <--                                                                quelle:                                                         [0] J.Noble, "ANS Forth Complex Arithmetic Lexicon",                 www.phys.virginia.edu/classes/551.jvn.fall01/complex.f.txt                                                                 ref:                                                            [1] Bronstein &al, Taschenbuch der Mathematik, Teubner 1979     [2] Habetha, Hoehere Mathematik fuer Ingenieure.., Klett 1976   [3] Noble, www.phys.virginia.edu/, "complex.f.txt", 2002        [4] Schmidt, Die Mathematik des Funktechnikers, Franckh 1940    [5] Wallot, "...Theorie der Schwachstromtechnik", Springer 1948                                                                 F4:                                                                 http://www.lxhp.in-berlin.de/lhpf4.html, e-lhpf4.html (en)                                                                  --> ======= < F4 : complex numbers ranum extensionload ;s ======= < F4 complex numbers extensioncomplex ranum' extension                   hp - JAN 12, 2004(  ERROR MESSAGES  ) -->                                        COMPILATION ONLY, USE IN DEFINITION                             EXECUTION ONLY                                                  CONDITIONALS NOT PAIRED                                         DEFINITION NOT FINISHED                                         IN PROTECTED DICTIONARY                                         USE ONLY WHEN LOADING                                           OFF CURRENT EDITING SCREEN                                      DECLARE VOCABULARY                                                                                                                                                                                                                                                                                                                                                                                                                                              F4 'complex ranum' extension                   hp - JAN 12, 2004( > ==== < F4 : f4z : complex numbers ranum extension > ==== < )if-found hlp! hlp!                   ( def filename for {help} )                                                                \ required:                                                     xlload? f4f                                                                                                                     \ util                                                          xlload? @ordercomplex numbers ranum extensioncomplex numbers ranum extensioncomplex numbers ranum extension > ======= < )if-found hlp! hlp!                                                                                                                                                                      -->                                                                                                                                       \ ' float v2>pfa is complex   \ link complex into voc           \ ' complex      is float     \ chain after {float}                                                                             ' float v2>pfa ' complex 2dup - if is float is complex endif ;                                                                : complex> [_] float decimal                                      ' float v2>pfa is complex ' complex is float ;    complex>                                                                                                                                                                                                    ( > ======= < F4 : complex numbers ranum extension > ======= < )float definitions               vocabulary complex immediate                                                                    root definitions                                                : complex> [_] float decimal                                      ' float v2>pfa ' complex 2dup =                                 if 2drop exit endif is float is complex ;                                                                                     complex> complex definitions                                                                                            -->     \ complex   ( -- )                                              \   pair of ranums, real and imaginary parts of a complex number\   notation "rz" &c, with rz = (rn,real rn,imaginary) and,     \   re = real, im = imaginary part, rc conjugated, rn ranum,    \   complex number z = rz = re + j * im; with j^2 = -1.         \   double ranum stack & memory operations apply to complex, too( : zf  eingabe )                                                                                                               : zf >inter ' [iranum] is [inter]                                 [ 1 ranumb << 1 quadb << or ] literal (bits) or! ; immediatezf    ( -- )                                                  \   die folgenden zwei zahleneingaben werden als 'ranum'        \   uebergeben, als literale oder in compilierter form.         ( : z@ : z! : z, : zv, : zliteral : zconstant : zvariable )                                                                     : z@  -compile f2@ ;                immediate                   : z!  -compile f2! ;                immediate                   : zl@ -compile fl2@ ;               immediate                   : zl! -compile fl2! ;               immediate                                                                                   : z,  -compile 2f, ;                immediate                   : zv, -compile 2fv, ;               immediate                                                                                   : zliteral  -compile 2fliteral  ;   immediate                   : zvariable -compile 2fvariable ;   immediate                   : zconstant -compile 2fconstant ;   immediate                                                                           -->                                                                                                                                     \ : zdrop : zpick : zroll : zdup : zover : zswap : zrot : zsdrop                                                                : zdrop -compile dfdrop ;                   immediate           : zpick -compile dfpick ;                   immediate           : zroll -compile dfroll ;                   immediate           : zdup  -compile dfdup  ;                   immediate           : zover -compile dfover ;                   immediate           : zswap -compile dfswap ;                   immediate           : zrot  -compile dfrot  ;                   immediate                                                                           : zsover -compile dfsover ;                 immediate           : zsdrop -compile dfswap -compile dfdrop ;  immediate           : -zrot -2 [_] literal -compile dfroll ;    immediate                                                                                                                                   -->                                                                     ( : Z,1 : Z,j : j^2  cons : Z,re : Z,im : Z,co conjugated    )                                                                  df  00 df 00 zconstant z,0                                      df  01 df 00 zconstant z,1                                      df  00 df 01 zconstant z,j                                      df -01       fconstant j^2                                      df  01       fconstant j^-2                                                                                                     : Z,re -compile fdrop ;         immediate                       : Z,im -compile fsdrop ;        immediate                       : Z,co -compile fminus ;        immediate                                                                               -->                                                                                                                                                                                                                                                                     ( : Z,re : Z,im : Z,co conjugated : j* : -j* : zint?          )                                                                 : j*  fminus fswap ;            ( x jy -- -y  jx )              : -j* fswap fminus ;            ( x jy --  y -jx )                                                                              : zminus fp minus swap minus swap ;  ( rz -- -rz )                                                                              : z->s fdrop f->s ;                                                                                                             : zint? ?f0= 0dup 0= -exit drop ( rz -- rz flg )                  fover fint? -4 roll fdrop ;                                                                                           -->     \ z->s  ( rz -- n )                                             \   ret real part of complex rz, truncated to a sing.           \ zint? ( rz -- rz flg )                                        \   tf if value of rz real and integralz. : zv. : zz. display )                                                                                                    : z.                    \ darstellung: "[re]+[im]j"               fswap -1 0 f.j                                                  fdup f0< 0= if "+ emit endif -1 0 f.j "j emit space ;                                                                         : zv.                   \ darstellung: "[n/d]+j*[n/d]"            fswap -1 0 v.j fdup f0< 0= if "+ emit endif "*j emit v. ;                                                                     : zz.                   \ darstellung: "([re];[im])"              fswap "( emit -1 0 f.j "; emit -1 0 f.j ") emit space ;                                                                                                                               -->                                                                     \ z.    ( z,re z,im -- )                                        \   complexe zahl in der o.a. form hinschreiben                 ( : z*f : z/f complex by scalar )                                                                                               : z*f fp dup rot * -rot * swap ;            ( rr ri rn -- rz )  : z/f fp 1/ z*f ;                           ( rr ri rn -- rz )                                                                  : z2* fp swap 2* swap 2* ;                  ( rz1 -- rz2 )      : z2/ fp swap 2/ swap 2/ ;                  ( rz1 -- rz2 )                                                              -->                                                                     \ z*f   ( rr ri rn -- rz )                                      \   multiplication of a complex by a scalar                     \ z/f   ( rr ri rn -- rz )                                      \   division of a complex by a scalar                           \ z2*   ( rz1 -- rz2 )                                          \ z2/   ( rz1 -- rz2 )                                          \   scalar mul/div complex by two                               ( : z^2 : z* complexes quadrat, produkt )                                                                                       : z*    ( re1 im1 re2 im2 -- rz3 )                                fover 4 fpick f* 1 fpick 4 fpick f* f- ( .. re1*re2-im1*im2 )   -4 froll 3 froll f* -frot f* f+ ;      ( .. re1*im2+r2*im1  )                                                                 : z^2   ( re im -- re2 im2 )                                      fover f^2 fover f^2 f- -frot f* f2* ;                                                                                                                                                 -->                                                                     \ z*    ( rz1 rz2 -- rz3 )                                      \   (re1,im1)*(re2,im2) = (re1*re2-im1*im2,re1*im2+re2*im1)     \ z^2   ( rz1 -- rz2 )                                          \   quadrat; rz2=(re^2-im^2,2*re*im)                            \   z^3 = re(re^2-3*im^2),im(3*re^2-im^2)                       \ : z+ : z-      complexe summe, differenz  )                                                                                   : z+ fp rot + >r + r> ;                                                                                                         : z- fp rot - >r - r> ;                                                                                                                                                                                                                                                                                                 -->                                                                                                                                                                                                     \ z+    ( rz1 rz2 -- rz3 )                                      \   (re1,im1)+(re2,im1) = (re1+re2,im1+im2)                     \ z-    ( rz1 rz2 -- rz3 )                                      \   rz1-rz2 = (re1,im1)-(re2,im1) = (re1-re2,im1-im2) = rz3     ( : 1/z : |z| : |z|m^2            kehrwert, betrag           )                                                                  : 1/z fp over ^2 over ^2 + dup rot /f minus -rot / swap ;                                                                       : |z|m^2 fp dup f*m rot dup f*m d+ ;            ( rz -- rd )    : |z|m   |z|m^2 dfsqrt ;                        ( rz -- rd )    : |z|    |z|m df->f ;                           ( rz -- rn )                                                                                                                            -->                                                                                                                                                                                                     \ 1/z       ( rz -- rz' )                                       \   kehrwert; 1/z = x/(x^2+y^2),y/(x^2+y^2)                     \ |z|   ( rz -- rn )                                            \   betrag einer complexen zahl.                                ( : z/ : /z complexer quotient )                                                                                                : z/ 1/z z* ;                                                   : /z zswap zz/        ( rz1 rz2 -- rz3 )                                  \   complexer quotient rz3 := rz1/rz2                           \ /z        ( rz1 rz2 -- rz3 )                                  \   complexer quotient, invers: rz3 := rz2/rz1                  \ : z,r : cos(p) : sin(p) : cis(p)  betrag & sin/cos arg polar                                                                  : z,r -compile |z| ;        immediate                                                                                           : cos(p) fover     |z| f/ ;                                     : sin(p) fdup frot |z| f/ ;                                     : cis(p) f2dup |z| frot fover f/ -frot f/ ;                                                                             -->                                                                     \ z,r   ( rz -- rn )                                            \   betrag, abstand z zum koordinaten-nullpunkt                 \ cos(p)    ( rz -- rn )                                        \   cosinus des arguments von z; cos(p) = re/|z|                \ sin(p)    ( rz -- rn )                                        \   sinus des arguments von z; sin(p) = im/|z|                  \ cis(p)    ( rz -- rn1 rn2 )                                   \ : arg(z) : >polar : polar>                                                                                                    : arg(z) pick2 >r atg2(f) r> 0< 0= -exit 2pi f+ ;                                                                               : >polar zdup |z| -frot arg(z) ;                                : polar> cis(p) fswap frot z*f fswap ;                                                                                                                                                  -->     \ arg(z) ( rz -- rn )                                           \   winkel zwischen abszisse und der geraden durch (z) und (0,0)\   nach [3]:                                                   \   : arg fdup f0< >r fswap fatan2 r> if fpi f2* f+ then ;      \ >polar ( rz -- r p )                                          \   convert from cartesian to polar co-ordinates                \ polar> ( rz -- r p )                                          \   convert from polar to cartesian co-ordinates                \ : ln(z) : e^z                                                                                                                 : ln(z) >polar fswap ln(f) fswap ;                                                                                              : e^z  sincos(f) fswap frot e^f z*f ;                                                                                   -->                                                                                                                                                                                                                                                                                                                                                                                                     \ ln(z) ( rz1 -- rz2 )                                         (\   natuerlicher logarithmus rz2 der complexen rz1              \ e^z   ( rz1 -- rz2 )                                         (\   rn1-te potenz der natuerlichen zahl, umkehrfunktion vn ln(z)                                                                : z^s >r z,1 zswap r 0> if                                        begin r 1and if zsover z* zswap endif z^2 r> 2/ >rr 0=          until endif zdrop rdrop ;                                                                                                     : z^ zdup                                                         zint? if zsdrop z->s z^s exit endif                             zdrop zswap ln(z) z* e^z ;                                                                                            -->                                                                                                                                                                                                     \ z^s   ( rz1 n2 -- rz3 )                                      (\   scalar n2-te potenz von rz1                                 \ z^    ( rz1 rz2 -- rz3 )                                     (\   rz1 zur rz2-ten potenz                                      ( : zsqrt )                                                                                                                     : zsqrt   ( f: x y -- a b )     \ (a+ib)^2 = x+iy                 zdup |z|m^2 df->f fdup f0= if fdrop exit endif fsqrt            -frot 2drop >r drop fsover f- f2/ fsover f+ fsqrt               r> f+- fswap fsqrt ;                                                                                                  -->                                                                                                                                                                                                     \ zsqrt     ( rz1 -- rz2 )                                      \   uebernommen von [3], etwas geaendert:                       \   : zsqrt   ( f: x y -- a b )     \ (a+ib)^2 = x+iy           \     zdup |z|^2 FDUP F0= IF FDROP EXIT THEN FSQRT              \     FROT FROT F0< >r ftuck F- F2/ ftuck F+ FSQRT              \     rt0 )                                                                                                                                                                                        forget t0                                                       ' noop defer t0     ' @csp defer td                             xlload !tick                                                    : t1                                                              !csp 100000 0 tick 2>r do df 123 df 456 t0 td loop              tick 2r> d- tick
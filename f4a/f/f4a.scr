=================== < F4 hi-level extensions > ================= f4a.scr implements the conditionally assembled F4 kernel words                                                                                                                                 use                                                                 { " /usr/local/lib/f4a/f4a.scr" }                           cpl all                                                             { USING 6 LOAD }                                            or,                                                                 { LLOAD forthword }                                                                                                                                                                                                                                                                                                                                                                                                                                         ( ================ < F4 hi-level extensions > ================ )                    6 b/scr * 1+ blk ! 0 in !                                                                                                              <f4a.scr>                                                                                                                  Tu 2004-01-19 09:02                                             Tu 2004-01-19 09:02                                                                                                Copyright (C) 2004 h.-peter recktenwald Berlin                        f4a -a- lxhp -:- in-berlin -:- de                                                                                                                                                                                                                                                                                                                                                                                                                ( ================ < F4 hi-level extensionshi-level extensions > ================ )                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                1234567890                                            1234567890(  ERROR MESSAGES  ) -->                                        EMPTY STACK                                                     DICTIONARY FULL                                                 HAS INCORRECT ADDRESS MODE                                      ISN'T UNIQUE                                                                                                                    DISC RANGE ?                                                    FULL STACK                                                      DISC ERROR !                                                                                                                                                                                                                                                                                                                                                                                                                                                    F4                                                   SEP 2, 2002(  ERROR MESSAGES  ) -->                                        COMPILATION ONLY, USE IN DEFINITION                             EXECUTION ONLY                                                  CONDITIONALS NOT PAIRED                                         DEFINITION NOT FINISHED                                         IN PROTECTED DICTIONARY                                         USE ONLY WHEN LOADING                                           OFF CURRENT EDITING SCREEN                                      DECLARE VOCABULARY                                                                                                                                                                                                                                                                                                                                                                                                                                              F4                                                   SEP 2, 2002( == : A4 ) forth definitions decimaltestthru                                                      ) if-found thru 6 +continue                                                         root definitions forth                                                                                        : thru                  ( n1 n2 -- )    ( load scr n1 till n2 )   1+ 2dup = if 2drop exit endif swap    ( n2 inclusive        )   do i load dr? bchan ch-rnum 0= -leave loop ; ( leave at eof )                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             -l a4 if-true -->                                                                                                                                                                               -l a4 if-truesafe! )                                                            root definitions decimal                                                                  if-nfound safe! : safe! last @ fence ! ;                                                                                                                                    -l a4 if-trueq+ : umd* ) forth definitions decimal                                                                                                       -l q+ 0= found? q+ or if-true 3 +continue                       : q+        ( q1 q2 -- q )                                        3 roll 0 8 roll u+ 4 roll 0 8 roll u+ rot u+                    4 roll 0 8 roll u+ rot u+ 4 roll 6 roll + + ;                                                                                 -l umd* 0= found? umd* or if-true 2 +continue                   : umd*      ( ud1 ud2 -- uq )                                     4dup sdrop udm* 0 4 nswap drop udm* 0 -3 roll q+ ;                                                                                                                        -l a4 if-true -->                                                                                                                                                                                                   ( == f4 == compat, doubles ====== : 2pick : 2roll : ddup )                                                                                       -wl 2roll -wl 2pick or 0= if-true 2 +continue  if-nfound 2roll : 2roll 2* s->d 2* 1+ + >rr roll r> roll ;      if-nfound 2pick : 2pick 2* s->d 2* 1+ + >rr pick r> pick ;                                                                      if-nfound ddup : ddup dup dup ;                                                                                                                                                                                                                                                                                                                                                                                                             -l a4 if-true -->                                                                                                                                                                                                   ( F4 = : 4roll : 4pick : 3drop : 4dup : 4swap : 4drop : 4over )                                                                 -l 4roll 0= if-true 1 +continue                                 if-nfound 4roll : 4roll 2* s->d 2* 1+ + >rr 2roll r> 2roll ;                                                                    -l 4pick 0= if-true 1 +continue                                 if-nfound 4pick : 4pick 2* s->d 2* 1+ + >rr 2pick r> 2pick ;                                                                    -l 4swap if-true if-nfound 4swap        : 4swap 4 nswap ;       -l 3drop if-true if-nfound 3drop        : 3drop 2drop drop ;    -l 4dup  if-true if-nfound 4dup         : 4dup  2over 2over ;   -l 4drop if-true if-nfound 4drop        : 4drop 2drop 2drop ;   -l 4over if-true if-nfound 4over        : 4over 1 4pick ;                                                                                                                    -l a4 if-true -->                                                                  ( == f4 == compat ====== : 3+ )                                                                                                 -l 3+ if-true if-nfound 3+ 3 cons+ 3+                                                                                           if-found source 1 +continue                                     : source blk@ 1- 0< if tib @ #tib exit endif prev @ c/l ;                                                                                                                    -l a4 if-truepick2 : pick3 : pick4 )                                                                 if-nfound pick2 : pick2 2 pick ;                                                                          -wl pick2 if-true ;s  if-nfound pick3 : pick3 3 pick ;                                                                          -wl pick3 if-true ;s  if-nfound pick4 : pick4 4 pick ;                                                                          -wl pick4 if-true ;s  -l rotd found? rotd 0= and dup                                     if-true if-found palias if-found  drop2  ' drop2 palias rotd    if-true if-nfound drop2  : drop2 rot drop ;  : rotd drop2 ;                                                             -->  \ pick2     ( n1 n2 n3 -- n1 n2 n3 n1 )                         \ pick3     ( n1 n2 n3 n4 -- n1 n2 n3 n4 n1 )                   \ pick4     ( n1 n2 n3 n4 n5 -- n1 n2 n3 n4 n5 n1 )             \ rotd      ( n1 n2 n3 -- n2 n3 )                               ( == vmem & cons ========== : cons+ : cons* : vcons+ : vcons* ) forth definitions                                                                                                               if-nfound cons+  : cons+  <builds (vp) @ , v, does> @ + ;       if-nfound cons*  : cons*  <builds (vp) @ , v, does> @ * ;                                                                       if-nfound vcons+ : vcons+ <builds (vp) @ , v, does> >body @ + ; if-nfound vcons* : vcons* <builds (vp) @ , v, does> >body @ * ;                                                                                                                                                                              -l a4 if-true -->                                                                                                                                                                                                  \ vcons+        ( ccc, n -- )(X: n1 -- n2 )     forth           \   run-time alterable, literal increment                       ( == f4 == store to/define a constant ================== : =: ) forth definitions decimal                                                                              if-found =: 3 +continue  : =:                                                              ?exec >input -find input>                                       if 2drop [_] is ;s endif constant ;           immediate                                                                                                                                                                                                                                                                                                                    -l a4 if-true -->                                                                                                                                  \ =:            ccc( n -- )                     forth           \   store n to 'constant' ccc,                                  \   define new constant if ccc not found in current search order( == f4 == kbd ================================== : key>alpha )                                                                                            -l key>alpha 0= if-true 1 +continue  if-nfound key>alpha : key>alpha dup dup uc-lc =/= ;                                                                                                                                                                                                                                                                                                                                                                                                                                                          -l a4 if-true -->                                                                                                                                                                                                  \ key>alpha ( c -- c flg )                                      \   true flag if c is a letter case convertible character.      ( == type asciz-string per addr == : zprint : >uc : >lc : uc? ) forth definitions decimal                                                                                                       if-nfound >uc : >uc dup key>char 0dup sdrop 0> 0= -exit uc-lc ; if-nfound >lc : >lc dup key>char 0dup sdrop 0< 0= -exit uc-lc ;                                                                                                                                                                                                                                                                                                                                                                              -l a4 if-true -->                                                                                                                                                                                                                                                                                                                                  ( ===================== : u^ ====== ) forth definitions decimal                                                                                      found? u^ -l u^ 0= or if-true 2 +continue  : u^ dup 1- 0< if or 1or exit endif                               over dup do 0 swap 1 do j udm* -leave loop leave loop ;                                                                                                                    -l a4 if-truefactorial ) forth definitions decimal       found? factorial -l factorial 0= or if-true 12 +continue  0. 2variable fac0       : xx swap v, v, ;                         1. xx   1. xx    2. xx  6. xx  24. xx  120. xx                  720. xx       5040. xx    40320. xx 362880. xx 3628800. xx      39916800.           xx           479001600. xx                  6227020800.         xx         87178291200. xx                  1307674368000.      xx      20922789888000. xx                  355687428096000.    xx    6402373705728000. xx                  121645100408832000. xx 2432902008176640000. xx    forget xx                                                                                            ( ret 0. if out of range             ) : factorial    ( +n -- d ( double factorial d of sing n, n<21 )   1+ dup 22 u< ( abs) minus and 8 * fac0 + 2@ ;                                                                                                                              -l a4 if-true -->  ( ===================== : dgcd == ) forth definitions decimal                    found? dgcd -l dgcd 0= or if-true 5 +continue                                                                  : dgcd  ( d1 d2 -- d ( signed doubles greatest common divisor )   dabs 2swap dabs                                                 enter begin 2swap 2over dmod entry 2dup d0= until 2drop ;                                                                                                                                                                                                                                                  -l a4 if-true -->                                                                                                                                                                                                                                                                                                                                                                                                  ( == debugging ============================= : recurse : int3 ) linux definitions                                                                               -l int3 0= if-true 2 +continue                                       if-found int3 1 +continue  create int3 $cc c, $ff c, $e3 c, smudge \ as: <int3, jmp *ebx>                                                                  forth definitions                                                                           if-found recurse 1 +continue        : recurse last @ pfa cfa , 1 cmc +! ; immediate                                                                                                                                                                                              -l a4 if-true